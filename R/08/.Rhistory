ggtitle("일자별 열지수그래프")
# 시각화
library(ggplot2)
ggplot(mapping =aes(x=disDay, y=disCouantity, fill=disDay), data=df2) +
geom_bar(stat="identity", position=position_dodge()) +
# geom_line(linetype = "dashed", size = 2)+
geom_hline(yintercept = (df$열지수=5), col='red')+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))+
ggtitle("일자별 열지수그래프")
ggplot(mapping =aes(x=disDay, y=disCouantity, fill=disDay), data=df) +
geom_bar(stat="identity", position=position_dodge()) +
# geom_line(linetype = "dashed", size = 2)+
geom_hline(yintercept = (df$열지수=5), col='red')+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))+
ggtitle("일자별 열지수그래프")
ggplot(mapping =aes(x=disDay, y=disCouantity, fill=disDay), data=df) +
geom_bar(stat="identity", position=position_dodge()) +
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))+
ggtitle("일자별 열지수그래프")
df
ggplot(mapping =aes(x=disDay, y=disQuantity, fill=disDay), data=df) +
geom_bar(stat="identity", position=position_dodge()) +
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))+
ggtitle("일자별 열지수그래프")
ggplot(mapping =aes(x=disDay, y=disQuantity, fill=disYear), data=df) +
geom_bar(stat="identity", position=position_dodge()) +
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))+
ggtitle("일자별 열지수그래프")
ggplot(mapping =aes(x=disDate, y=disQuantity, fill=disYear), data=df) +
geom_bar(stat="identity", position=position_dodge()) +
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))+
ggtitle("요일별 배출량")
# 요일별 쓰레기 배출량을 년도별로
ggplot(mapping =aes(x=disDay, y=disQuantity, fill=disYear), data=df) +
geom_bar(stat="identity", position=position_dodge()) +
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))+
ggtitle("요일별 배출량")
# 요일별 쓰레기 배출량을 년도별로
ggplot(mapping =aes(x=disDate, y=disQuantity, fill=disYear), data=df) +
geom_bar(stat="identity", position=position_dodge()) +
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))+
ggtitle("일주일치 배출량")
# 일주일치 쓰레기 배출량을 년도별로
ggplot(mapping =aes(x=disDate, y=disQuantity, fill=disYear), data=df) +
geom_bar(stat="identity", position=position_dodge()) +
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))+
ggtitle("일주일치 배출량")
ggplot(mapping =aes(x=disYear, y=disQuantity, fill=disYear), data=df) +
geom_bar(stat="identity", position=position_dodge()) +
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))+
ggtitle("요일별 배출량")
trash <- function(year, month){
apikey <- "VAoTrkbH%2FSGjNYtMCZRVCtF9WlsrxxLRPZLdsdfvO9hMFYfJG9OBW1sji%2FJ1jO%2B0xDHBrDHIDfR1jc3t9C0pQw%3D%3D"
cityCode <- "W10"
# year <- "2020"
# month <- "08"
url <- paste("http://apis.data.go.kr/B552584/RfidFoodWasteServiceNew/getTotalDateList?Service",
"Key=",apikey,
"&type=json&page=1&rowNum=30&dis",
"Year=",year,
"&disMonth=",month, sep="")
# # Json 추출
tr <- fromJSON(url)
## list 자료 출력
answer <- tr$data$list
return (answer)
}
## 2020년 8월 자료 출력
df2020 <- trash("2020", "08")
## 2021년 8월 자료 출력
df2021 <- trash("2021", "08")
## 2022년 8월 자료 출력
df2022 <- trash("2022", "08")
df <- rbind(df2020, df2021, df2022)
df
# 일주일치 쓰레기 배출량을 년도별로
ggplot(mapping =aes(x=disDate, y=disQuantity, fill=disYear), data=df) +
geom_bar(stat="identity", position=position_dodge()) +
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))+
ggtitle("일주일치 배출량")
# 년도별 쓰레기 배출량
ggplot(mapping =aes(x=disYear, y=disQuantity, fill=disYear), data=df) +
geom_bar(stat="identity", position=position_dodge()) +
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))+
ggtitle("년도별 배출량")
# 일주일치 쓰레기 배출량을 년도별로
ggplot(mapping =aes(x=disDate, y=disQuantity, fill=disYear), data=df) +
geom_bar(stat="identity", position=position_dodge()) +
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))+
ggtitle("일주일치 배출량")
# 한달치 쓰레기 배출량을 년도별로
ggplot(mapping =aes(x=disDate, y=disQuantity, fill=disYear), data=df) +
geom_bar(stat="identity", position=position_dodge()) +
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))+
ggtitle("한달치 배출량")
# 한달치 쓰레기 배출량을 년도별로
ggplot(mapping =aes(x=disDate, y=disQuantity, fill=disYear), data=df) +
geom_bar(stat="identity", position=position_dodge()) +
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))+
ggtitle("8월 한달치 배출량")
# 8월의 쓰레기 배출량을 년도별로
ggplot(mapping =aes(x=disDate, y=disQuantity, fill=disYear), data=df) +
geom_bar(stat="identity", position=position_dodge()) +
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))+
ggtitle("8월의 쓰레기 배출량")
ggplot(mapping =aes(x=disDate, y=disQuantity, fill=disYear), data=df) +
geom_bar(stat="identity", position=position_dodge()) +
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))+
ggtitle("년도별 배출량")
ggplot(mapping =aes(x=disDay, y=disQuantity, fill=disYear), data=df) +
geom_bar(stat="identity", position=position_dodge()) +
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))+
ggtitle("년도별 배출량")
# 배출 요일 별 쓰레기 배출량
ggplot(mapping =aes(x=disDay, y=disQuantity, fill=disYear), data=df) +
geom_bar(stat="identity", position=position_dodge()) +
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))+
ggtitle("배출요일별 쓰레기 배출량")
# 년도별 쓰레기 배출량
ggplot(mapping =aes(x=disYear, y=disQuantity, fill=disYear), data=df) +
geom_bar(stat="identity", position=position_dodge()) +
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))+
ggtitle("년도별 배출량")
# 배출 요일 별 쓰레기 배출량
ggplot(mapping =aes(x=disDay, y=disQuantity, fill=disYear), data=df) +
geom_bar(stat="identity", position=position_dodge()) +
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))+
ggtitle("배출요일별 쓰레기 배출량")
print(m)
for (i in 1:12){
if (i < 10) { m = paste("0", i, sep="")}
else m = as.character(i);
print(m);
}
dft <- data.frame();
for (i in 1:12){
if (i < 10) { m = paste("0", i, sep="")}
else m = as.character(i);
temp <- trash("2022", m)
dft <- bind_rows(dft, temp)
}
dft
dft2022 <- bind_rows(dft, temp)
dft2022
for (i in 1:12){
if (i < 10) { m = paste("0", i, sep="")}
else m = as.character(i);
temp2022 <- trash("2022", m)
temp2021 <- trash("2021", m)
temp2020 <- trash("2020", m)
dft2022 <- bind_rows(dft, temp2022)
dft2021 <- bind_rows(dft, temp2021)
dft2020 <- bind_rows(dft, temp2020)
}
dft2022
dft2022
dft2021
dft2020
dft2020
head(dft2020)
## 년도별 자료 추출
# 데이터 프레임 생성
dft <- data.frame();
for (i in 1:12){
if (i < 10) { m = paste("0", i, sep="")}
else m = as.character(i);
temp2022 <- trash("2022", m)
temp2021 <- trash("2021", m)
temp2020 <- trash("2020", m)
dft2022 <- bind_rows(dft2022, temp2022)
dft2021 <- bind_rows(dft2021, temp2021)
dft2020 <- bind_rows(dft2020, temp2020)
}
dft2022
dft2021
head(dft2020)
## 년도별 자료 추출
# 데이터 프레임 생성
dft <- data.frame();
for (i in 1:12){
if (i < 10) { m = paste("0", i, sep="")}
else m = as.character(i);
temp2022 <- trash("2022", m)
temp2021 <- trash("2021", m)
temp2020 <- trash("2020", m)
dft2022 <- bind_rows(dft2022, temp2022)
dft2021 <- bind_rows(dft2021, temp2021)
dft2020 <- bind_rows(dft2020, temp2020)
}
head(dft2020)
## 년도별 자료 추출
# 데이터 프레임 생성
dft <- data.frame();
head(dft2020)
# temp2022 <- trash("2022", m)
# temp2021 <- trash("2021", m)
temp2020 <- trash("2020", m)
temp2020
dft2020
temp2020
dft2021 <- data.frame();
dft2020 <- data.frame();
## 년도별 자료 추출
# 데이터 프레임 생성
dft2022 <- data.frame();
for (i in 1:12){
if (i < 10) { m = paste("0", i, sep="")}
else m = as.character(i);
# temp2022 <- trash("2022", m)
# temp2021 <- trash("2021", m)
temp2020 <- trash("2020", m)
# dft2022 <- bind_rows(dft2022, temp2022)
# dft2021 <- bind_rows(dft2021, temp2021)
dft2020 <- bind_rows(dft2020, temp2020)
}
head(dft2020)
## 년도별 자료 추출
# 데이터 프레임 생성
dft2022 <- data.frame();
dft2021 <- data.frame();
dft2020 <- data.frame();
for (i in 1:12){
if (i < 10) { m = paste("0", i, sep="")}
else m = as.character(i);
temp2022 <- trash("2022", m)
temp2021 <- trash("2021", m)
temp2020 <- trash("2020", m)
dft2022 <- bind_rows(dft2022, temp2022)
dft2021 <- bind_rows(dft2021, temp2021)
dft2020 <- bind_rows(dft2020, temp2020)
}
dft2022
dft2021
head(dft2020)
# 데이터 열 생성
df %>%
mutate(disweek = case_when(disDay == 1 ~ "일",
disDay == 2 ~ "월",
disDay == 3 ~ "화",
disDay == 4 ~ "수",
disDay == 5 ~ "목",
disDay == 6 ~ "금",
disDay == 7 ~ "토",
))
source("C:/Rwork/06/api로 쓰레기 현황 분석.R", encoding = 'UTF-8', echo=TRUE)
# 데이터 열 생성
# mutate = 열 생성
df %>%
mutate(disweek = case_when(disDay == 1 ~ "일",
disDay == 2 ~ "월",
disDay == 3 ~ "화",
disDay == 4 ~ "수",
disDay == 5 ~ "목",
disDay == 6 ~ "금",
disDay == 7 ~ "토"
))
library(dplyr)
dft <- bind_rows(dft2020, dft2021, dft2022)
dft
dft <- bind_rows(dft2020, dft2021, dft2022)
dft
dft <- rbind(dft2020, dft2021, dft2022)
dft
dft2022
dft2021
head(dft2020)
head(dft2022)
head(dft2021)
head(dft2020)
# 데이터 열 생성
# mutate = 열 생성
df %>%
mutate(disweek = case_when(disDay == 1 ~ "일",
disDay == 2 ~ "월",
disDay == 3 ~ "화",
disDay == 4 ~ "수",
disDay == 5 ~ "목",
disDay == 6 ~ "금",
disDay == 7 ~ "토"
))
library(dplyr)
library(dplyr)
dft <- rbind(dft2020, dft2021, dft2022)
dft
library(dplyr)
dft <- bind_rows(dft2020, dft2021, dft2022)
dft <- rbind(dft2020, dft2021, dft2022)
dft
dft <- bind_rows(dft2020, dft2021, dft2022)
dft
# 년도별 쓰레기 배출량
ggplot(mapping =aes(x=disYear, y=disQuantity, fill=disYear), data=df) +
geom_bar(stat="identity", position=position_dodge()) +
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))+
ggtitle("년도별 배출량")
# 8월의 쓰레기 배출량을 년도별로
ggplot(mapping =aes(x=disDate, y=disQuantity, fill=disYear), data=df) +
geom_bar(stat="identity", position=position_dodge()) +
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))+
ggtitle("8월의 쓰레기 배출량")
# 월별 쓰레기 배출량
ggplot(mapping =aes(x=disMonth, y=disQuantity, fill=disYear), data=df) +
geom_bar(stat="identity", position=position_dodge()) +
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))+
ggtitle("배출요일별 쓰레기 배출량")
# 월별 쓰레기 배출량
ggplot(mapping =aes(x=disMonth, y=disQuantity, fill=disYear), data=dft) +
geom_bar(stat="identity", position=position_dodge()) +
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))+
ggtitle("배출요일별 쓰레기 배출량")
# 월별 쓰레기 배출량
ggplot(mapping =aes(x=disMonth, y=disQuantity, fill=disYear), data=dft) +
geom_bar(stat="identity", position=position_dodge()) +
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))+
ggtitle("월별 쓰레기 배출량")
for (i in 1:12){
if (i < 10) { m = paste("0", i, sep="")}
else m = as.character(i);
temp2022 <- trash("2022", m)
temp2021 <- trash("2021", m)
temp2020 <- trash("2020", m)
dft2022 <- bind_rows(dft2022, temp2022)
dft2021 <- bind_rows(dft2021, temp2021)
dft2020 <- bind_rows(dft2020, temp2020)
}
dft <- rbind(dft2020, dft2021, dft2022)
dft
# 월별 쓰레기 배출량
ggplot(mapping =aes(x=disMonth, y=disQuantity, fill=disYear), data=dft) +
geom_bar(stat="identity", position=position_dodge()) +
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))+
ggtitle("월별 쓰레기 배출량")
View(dft)
dft<- data.frame();
## 년도별 자료 추출
# 데이터 프레임 생성
dft2022 <- data.frame();
dft2021 <- data.frame();
dft2020 <- data.frame();
for (i in 1:12){
if (i < 10) { m = paste("0", i, sep="")}
else m = as.character(i);
temp2022 <- trash("2022", m)
temp2021 <- trash("2021", m)
temp2020 <- trash("2020", m)
dft2022 <- bind_rows(dft2022, temp2022)
dft2021 <- bind_rows(dft2021, temp2021)
dft2020 <- bind_rows(dft2020, temp2020)
}
head(dft2022)
head(dft2021)
head(dft2020)
dft <- rbind(dft2020, dft2021, dft2022)
View(dft)
# 월별 쓰레기 배출량
ggplot(mapping =aes(x=disMonth, y=disQuantity, fill=disYear), data=dft) +
geom_bar(stat="identity", position=position_dodge()) +
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))+
ggtitle("월별 쓰레기 배출량")
# 년도별 쓰레기 배출량
ggplot(mapping =aes(x=disYear, y=disQuantity, fill=disYear), data=dft) +
geom_bar(stat="identity", position=position_dodge()) +
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))+
ggtitle("년도별 배출량")
# 배출 요일 별 쓰레기 배출량
ggplot(mapping =aes(x=disDay, y=disQuantity, fill=disYear), data=dft) +
geom_bar(stat="identity", position=position_dodge()) +
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))+
ggtitle("배출요일별 쓰레기 배출량")
head(dft)
# 월별 쓰레기 배출량
ggplot(mapping =aes(x=disMonth, y=disCount, fill=disYear), data=dft) +
geom_bar(stat="identity", position=position_dodge()) +
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))+
ggtitle("월별 쓰레기 배출량")
# 월별 쓰레기 배출횟수
ggplot(mapping =aes(x=disMonth, y=disCount, fill=disYear), data=dft) +
geom_bar(stat="identity", position=position_dodge()) +
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))+
ggtitle("월별 쓰레기 배출횟수")
# 1) 요일별 일평균 배출량
ggplot(data=dt, aes(x= 배출요일, y=일평균배출량, group=배출년도, col = 배출년도)) +
geom_line()+
geom_point()+
ggtitle('요일별 일평균배출량')+
theme(plot.title = element_text(hjust =0.5,size=20,face='bold'))+
scale_x_discrete(limits=c('일','월','화','수','목','금','토'))
# 1) 요일별 일평균 배출량
ggplot(data=dft, aes(x= 배출요일, y=일평균배출량, group=배출년도, col = 배출년도)) +
geom_line()+
geom_point()+
ggtitle('요일별 일평균배출량')+
theme(plot.title = element_text(hjust =0.5,size=20,face='bold'))+
scale_x_discrete(limits=c('일','월','화','수','목','금','토'))
# 1) 요일별 일평균 배출량
ggplot(data=df, aes(x= 배출요일, y=일평균배출량, group=배출년도, col = 배출년도)) +
geom_line()+
geom_point()+
ggtitle('요일별 일평균배출량')+
theme(plot.title = element_text(hjust =0.5,size=20,face='bold'))+
scale_x_discrete(limits=c('일','월','화','수','목','금','토'))
head(dft)
dtd$disQuantity
dft$disQuantity
# # 요일별 일평균 배출량
ggplot(data=df, aes(x= disDay, y=dft$disQuantity, group=disYear, col = disYear)) +
geom_line()+
geom_point()+
ggtitle('요일별 일평균배출량')+
theme(plot.title = element_text(hjust =0.5,size=20,face='bold'))+
scale_x_discrete(limits=c('일','월','화','수','목','금','토'))
# # 요일별 일평균 배출량
ggplot(data=df, aes(x= disDay, y=disQuantity, group=disYear, col = disYear)) +
geom_line()+
geom_point()+
ggtitle('요일별 일평균배출량')+
theme(plot.title = element_text(hjust =0.5,size=20,face='bold'))+
scale_x_discrete(limits=c('일','월','화','수','목','금','토'))
getwd()
setwd("C:/Rwork/08")
getwd()
#데이터 불러오기
df <- read.csv("./data/07_기온강수량.csv",
header = T,
stringsAsFactors = F,
fileEncoding = 'euc-kr')
getwd()
#데이터 불러오기
df <- read.csv("./data/08_기온강수량.csv",
header = T,
stringsAsFactors = F,
fileEncoding = 'euc-kr')
getwd()
setwd("C:/Rwork/08")
#데이터 불러오기
df <- read.csv("./data/08_기온강수량.csv",
header = T,
stringsAsFactors = F,
fileEncoding = 'euc-kr')
#데이터 불러오기
df <- read.csv("./07_기온강수량.csv",
header = T,
stringsAsFactors = F,
fileEncoding = 'euc-kr')
df <- df[, 3:5]
df
#데이터 불러오기
df <- read.csv("./07_기온강수량.csv",
header = T,
stringsAsFactors = F,
fileEncoding = 'euc-kr')
df
df <- df[, 3:5]
df
#2. 시계열 데이터 생성
temp_ts <- ts(temp, frequency = 12, start = c(2020, 1))
#데이터 불러오기
df <- read.csv("./07_기온강수량.csv",
header = T,
stringsAsFactors = F,
fileEncoding = 'euc-kr')
df <- df[, 3:5]
df
str(df)
library(dplyr)
train <- df %>% filter(일시 < '2022-01-01' & 일시 >= '2020-01-01')
test <- df %>% filter(일시 >= '2022-01-01')
#1. 데이터준비
temp <- train $평균기온
#2. 시계열 데이터 생성
temp_ts <- ts(temp, frequency = 12, start = c(2020, 1))
View(train)
#1. 데이터준비
temp <- train $평균기온
temp
#2. 시계열 데이터 생성
temp_ts <- ts(temp, frequency = 12, start = c(2020, 1))
temp_ts
#3. 시계열추세 확인
#추세 (Trend): 데이터의 장기적인 증가 또는 감소를 추세라고 한다. 그것은 반드시 선형적인 것은 아니다. 그것은 시간의 경과에 따른 데이터의 기본 패턴이다.
#계절성 (Seasonal): 시리즈가 계절적 요인에 의해 영향을 받는 경우(즉, 분기, 월 또는 요일) 시리즈에는 계절성이 존재한다. 그것은 항상 고정되고 알려진 기간이다. 예: -크리스마스 기간 동안 매출이 급 상승하는 경우 등.
#주기 (Cyclic): 일정 기간이 아닌 데이터가 상승하거나 하락할 때 우리는 이를 주기적 패턴이라고 부른다. 예를들어 - 이러한 변동 지속기간은 일반적으로 최소 2년이다.
components.ts = decompose(temp_ts)
#관측값 ( Observed ) – 실제 데이터 플롯
#추세 ( Trend ) – 데이터 점들의 전반적인 상향 또는 하향 움직임
#계절성 ( Seasonal )  – 데이터 점들의 월별/년별 패턴
#임의값 ( Random ) – 데이터의 설명할 수 없는 부분
plot(components.ts)
install.packages("forecast")
library(forecast)
arima <- auto.arima(temp_ts)
arima
#5.모형생성
model <- arima(temp_ts, order=c(3,0,0))
model
#6.모형타당성 검사
#자기 상관함수에 의한 모형 진단
tsdiag(model)
#box-Ljungn잔차항 모형 진단
#p-value >= 0.05 통계적으로 적절
Box.test(model$residuals, lag=1, type="Ljung")
#7.예측
fore <- forecast(model, h=11)
fore
plot(fore)
class(fore$mean)
pred = as.vector(fore$mean)
result <- data.frame(test = test$평균기온, pred=pred)
result
plot(result$test, type="o", col="red")
par(new=T)
plot(result$pred, type="o", col="blue")
